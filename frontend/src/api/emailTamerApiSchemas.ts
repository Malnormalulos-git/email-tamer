/**
 * Generated by @openapi-codegen
 *
 * @version v1
 */
export enum ConnectionFault {
  Other = 'other',
  ConnectionRefused = 'connectionRefused',
  PortOutOfRange = 'portOutOfRange',
  WrongAuthenticationCredentials = 'wrongAuthenticationCredentials',
}

export enum UserRole {
  User = 'user',
  Admin = 'admin',
}

export type AuthResponseDto = {
  token?: string | null;
};

export type CreateEmailBoxDto = {
  boxName?: string | null;
  userName?: string | null;
  email?: string | null;
  authenticateByEmail?: boolean;
  password?: string | null;
  emailDomainConnectionHost?: string | null;
  /**
   * @format int32
   */
  emailDomainConnectionPort?: number;
  useSSl?: boolean;
};

export type CreateUserDto = {
  email?: string | null;
  password?: string | null;
  role?: UserRole;
};

export type EditEmailBoxDto = {
  /**
   * @format uuid
   */
  id?: string;
  boxName?: string | null;
  userName?: string | null;
  email?: string | null;
  authenticateByEmail?: boolean | null;
  password?: string | null;
  emailDomainConnectionHost?: string | null;
  /**
   * @format int32
   */
  emailDomainConnectionPort?: number | null;
  useSSl?: boolean | null;
};

export type EmailAddress = {
  name?: string | null;
  address?: string | null;
  domain?: string | null;
};

export type EmailBoxDetailsDto = {
  /**
   * @format uuid
   */
  id?: string;
  boxName?: string | null;
  userName?: string | null;
  email?: string | null;
  authenticateByEmail?: boolean;
  emailDomainConnectionHost?: string | null;
  /**
   * @format int32
   */
  emailDomainConnectionPort?: number;
  useSSl?: boolean;
  connectionFault?: ConnectionFault;
};

export type EmailBoxDto = {
  /**
   * @format uuid
   */
  id?: string;
  boxName?: string | null;
  /**
   * @format date-time
   */
  lastSyncAt?: string | null;
  connectionFault?: ConnectionFault;
};

export type FolderDto = {
  /**
   * @format uuid
   */
  id?: string;
  name?: string | null;
};

export type LogInDto = {
  email?: string | null;
  password?: string | null;
};

export type MessageDetailsDto = {
  id?: string | null;
  inReplyTo?: string | null;
  subject?: string | null;
  textBody?: string | null;
  attachmentFilesNames?: string[] | null;
  references?: string[] | null;
  from?: EmailAddress[] | null;
  to?: EmailAddress[] | null;
  /**
   * @format date-time
   */
  date?: string;
  /**
   * @format date-time
   */
  resentDate?: string | null;
  htmlBody?: string | null;
};

export type MessageDto = {
  id?: string | null;
  threadId?: string | null;
  subject?: string | null;
  textBody?: string | null;
  /**
   * @format date-time
   */
  date?: string;
  participants?: string[] | null;
};

export type MessagesThreadDto = {
  threadId?: string | null;
  messages?: MessageDto[] | null;
  subject?: string | null;
  lastMessage?: MessageDetailsDto;
};

export type MessagesThreadShortDto = {
  threadId?: string | null;
  lastMessage?: MessageDto;
  subject?: string | null;
  /**
   * @format date-time
   */
  startDate?: string;
  /**
   * @format date-time
   */
  endDate?: string;
  /**
   * @format int32
   */
  length?: number;
};

export type MessagesThreadShortDtoPagedResult = {
  items?: MessagesThreadShortDto[] | null;
  /**
   * @format int32
   */
  page?: number;
  /**
   * @format int32
   */
  size?: number;
  /**
   * @format int32
   */
  total?: number;
};

export type TestConnectionDto = {
  userName?: string | null;
  email?: string | null;
  authenticateByEmail?: boolean;
  password?: string | null;
  emailDomainConnectionHost?: string | null;
  /**
   * @format int32
   */
  emailDomainConnectionPort?: number;
  useSSl?: boolean;
};

export type UserDto = {
  id?: string | null;
  email?: string | null;
  role?: UserRole;
};
